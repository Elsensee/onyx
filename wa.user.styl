/* ==UserStyle==
@name         Dark-WhatsApp
@description  Dark and light, very customizable theme for WhatsApp.
@namespace    github.com/vednoc/onyx
@homepageURL  https://github.com/vednoc/onyx
@supportURL   https://github.com/vednoc/onyx/issues
@version      1.9.9
@author       vednoc <vednoc@pm.me> (https://gitlab.com/vednoc)
@license      MIT
@preprocessor stylus

@var text     ui_font    'Custom UI font        ' ''font_name''
@var text     radius     'Custom rounded corners' 4px
@var checkbox msg_tails  'Enable message tails  ' 1
@var checkbox fullscreen 'Enable fullscreen mode' 0
@var select   app_image  'Custom app background ' {
    'Custom  *': 'custom  ',
    'Default  ': 'default ',
    'None     ': 'none    ',
}
@var text     image_url  'Custom background link' url('https://images.unsplash.com/photo-1434569117012-ce134ee1a088?fit=crop&w=1280&h=720&q=80')

@var color dark    'Color: Primary bg   ' #272c35
@var color darken  'Color: Highlight bg ' #222730
@var color darker  'Color: Secondary bg ' #1f232a
@var color light   'Color: Primary fg   ' #d1d1d1
@var color lighter 'Color: Secondary fg ' #e9e9e9
@var color accent  'Color: Accent       ' #7289da
@var color yellow  'Color: Yellow       ' #f0c674
@var color orange  'Color: Orange       ' #d98245
@var color red     'Color: Red          ' #a54242
@var color magenta 'Color: Magenta      ' #b294bb
@var color violet  'Color: Violet       ' #85678f
@var color blue    'Color: Blue         ' #54738c
@var color cyan    'Color: Cyan         ' #5e8d87
@var color green   'Color: Green        ' #7b823a
@var color white   'Color: White        ' #ffffff
@var color shadow  'Color: Shadow       ' #00000010
==/UserStyle== */

@-moz-document domain('web.whatsapp.com') {

    :root {
        --dark      : dark;
        --darken    : darken;
        --darker    : darker;
        --light     : light;
        --lighter   : lighter;
        --accent    : accent;
        --shadow    : shadow;
        --yellow    : yellow;
        --orange    : orange;
        --red       : red;
        --magenta   : magenta;
        --violet    : violet;
        --blue      : blue;
        --cyan      : cyan;
        --green     : green;
        --white     : white;
        --radius    : radius;
        --t         : transparent;
        --bshadow   : 0 2px 4px var(--shadow);

        --userstyle: 'Dark-WhatsApp [Alpha]';
        --bg-image  : image_url;
    }

    // * Use stylus-lang variables with CSS variables.
    bg      = var(--dark);
    hl      = var(--darken);
    bd      = var(--darker);
    fg      = var(--light);
    cm      = var(--lighter);
    ac      = var(--accent);
    sh      = var(--shadow);
    bsh     = var(--bshadow);
    yellow  = var(--yellow);
    orange  = var(--orange);
    red     = var(--red);
    magenta = var(--magenta);
    violet  = var(--violet);
    blue    = var(--blue);
    cyan    = var(--cyan);
    green   = var(--green);
    white   = var(--white);
    t       = var(--t);
    r       = var(--radius);
    outer   = 0 0 0 1px bd;
    inner   = inset outer;

    // Color mixin.
    // All colors: `c: fg bd bg;`
    // Only border-color: `c: 0 bd;`
    c(x, y = 0, z = 0, xi = 1, yi = 1, zi = 1) {
        i = !important;
        if x is a 'call' or x is a 'rgba' {            color: xi is 0? x : x i }
        if y is a 'call' or y is a 'rgba' {     border-color: yi is 0? y : y i }
        if z is a 'call' or z is a 'rgba' { background-color: zi is 0? z : z i }
    }
    // SVG mixin.
    v(x, y = 0, xi = 1, yi = 1) {
        i = !important;
        if x is a 'call' or x is a 'rgba' {   fill: xi is 0? x : x i }
        if y is a 'call' or y is a 'rgba' { stroke: yi is 0? y : y i }
    }
    // Rounded corners.
    rad() { border-radius: arguments }

    body {
        c: fg 0 bg;
        background-image: none;
        scrollbar-color: ac #5552;

        /// Feat -> Custom font.
        font-family: ui_font, 'Segoe UI', 'Helvetica Neue', Helvetica,\
            'Lucida Grande', Arial, Ubuntu, Cantarell, 'Fira Sans', sans-serif;

        /// App -> Landing page.
        .landing {
            &-wrapper::before { c: 0 0 hl }
            &-header {
                position: relative;
                &::after {
                    right: 0;
                    position: absolute;
                    content: var(--userstyle);
                }
                path[fill ^= '#FFF'] { fill: ac }
                path[fill ^= '#00E'] { fill: bd }
                div { c: fg }
            }
            &-window:not(#z) {
                rad: r;
                c: 0 0 bg;
                box-shadow: inner, bsh;
            }
            &-main {
                a[href] { c: ac }
                ._2yUXW { c: cm }
                .landing-title { c: fg }
                rect[fill ^= '#f2f'], rect[fill ^= '#F2F'] { fill: bd }
                path[fill ^= '#818'] { fill: ac }
                /// QR code.
                div[data-ref] {
                    rad: 0;
                    filter: contrast(150%);
                    outline: 4px solid white;
                    box-shadow: 0 0 0 4px white;
                    [role='button'] { c: white 0 ac }
                }
                /// Video showcase.
                + ._310T_ {
                    c: 0 0 t;
                    img { opacity: 0.3 }
                }
            }
        }

        /// App -> Startup.
        #initial_startup, #startup {
            c: 0 0 bg;
            progress { c: ac 0 bd }
            ::-moz-progress-bar { c: 0 0 ac }
            circle { stroke: fg }
        }

        // App -> Tooltips.
        ._3pkG4 {
            c: fg 0 hl;
            box-shadow: inner, bsh;
            button { c: ac }
        }

        /// App -> Intro.
        .iFKgT {
            c: 0 bd bg;
            [style] {
                h1 { c: fg }
                div { c: cm }
            }
            /// Reset default image.
            [data-asset-intro-image] {
                rad: 50%;
                max-width: 200px;
                max-height: 200px;
                filter: opacity(0.75);
                transition: opacity 0.6s ease;
            }
        }
    }

    #app > div {
        &::after {
            /// TODO: Implement URL/opacity/filter options.
            if ( app_image == custom ) {
                s = -4px;
                opacity: 0.50;
                top: s; right: s; bottom: s; left: s;
                height: unset; width: unset;
                filter: blur((-1 * s)) invert(0);
                background-image: var(--bg-image);
                c: 0 0 hl;
            } else if ( app_image == default ) {
                c: 0 0 hl;
            } else {
                display: none;
            }
            /// Remove image in fullscreen mode.
            if ( fullscreen == 1 ) { content: none }
        }

        .app {
            c: 0 0 bg;
            background-image: none;
            @media (min-width: 1441px) {
                border: 1px solid bd;
                rad: r;
                box-shadow: bsh;
                /// Feat -> Fullscreen mode.
                if ( fullscreen == 1 ) {
                    rad: 0;
                    top: unset;
                    width: 100%;
                    height: 100%;
                }
            }
        }
    }

    /// Global -> Emojis.
    /// TODO: Implement options for roundness and opacity.
    .emojik {
        clip-path: circle(49%);
        &:focus, &.selected { box-shadow: 0 0 0 2px ac !important }
        &:not(:hover):not(:focus):not(.selected) { filter: opacity(0.6) }
    }

    /// Global -> Modals.
    .overlay {
        c: 0 0 t;
        /// Backdrop.
        &::before {
            content: '';
            z-index: -1;
            opacity: 0.96;
            position: absolute;
            top: 0; right: 0; bottom: 0; left: 0;
            c: 0 0 bg;
        }
        /// Header.
        > .cGLoy {
            c: 0 0 bg;
            box-shadow: 0 1px bd;
            div { c: 0 0 t }
            .xD91K { c: cm }
            ._3H4MS { c: fg }
        }
        /// Previous/next buttons.
        ._3yth3:not(#z) {
            c: 0 0 bg;
            box-shadow: inner, bsh;
            &:hover { c: 0 0 hl }
        }
        /// Text.
        .X5OiD { c: 0 0 bd }
        .JmH7x { c: cm }
        ._2yVvV { c: fg }
        /// Primary buttons.
        [role = 'button']._3PQ7V {
            c: white 0 ac;
            box-shadow: bsh;
            transition: 0.15s ease;
            &:hover { opacity: 0.8 }
        }
        /// Popup message.
        [data-animate-modal-popup]:not(#z) {
            rad: r;
            c: 0 0 bg;
            box-shadow: inner, 0 4px 8px 2px sh;
            ._13HPh { c: fg }
        }
    }

    // * Global -> Status.
    [data-animate-status-v3-modal-background='true'] {
        c: 0 0 t;
        /// Backdrop.
        &::before {
            content: '';
            z-index: -1;
            opacity: 0.91;
            position: absolute;
            top: 0; right: 0; bottom: 0; left: 0;
            c: 0 0 bg;
        }
        /// Content.
        > div {
            c: 0 0 bg;
            @media (min-width: 1441px) {
                rad: r;
                box-shadow: outer;
            }
            /// Contacts.
            > div[class]:nth-child(1) {
                c: 0 0 hl;
                box-shadow: 1px 0 bd;
                @media (min-width: 1441px) { rad: r 0 0 r }
                /// Text.
                .OEFaY { c: cm }
                ._26-u- { c: fg }
            }
            > div[class]:nth-child(2) {
                .ojaNO { c: cm }
                /// Reset the circle icon.
                svg[width][height] path {
                    fill: none;
                    stroke: fg
                }
            }
            /// Feat -> Fullscreen mode.
            if ( fullscreen == 1 ) {
                rad: 0;
                top: unset;
                width: 100%;
                height: 100%;
            }
        }
    }

    // Global -> Media selection.
    ._2AP3i {
        c: 0 bd bg;
        /// Item reset.
        ._1LdNS {
            &.cJP5q {
                border: none !important;
                transform: scale(1) !important;
                outline: 4px solid ac;
            }
            &:hover:not(.cJP5q):not(#spec) { outline: 4px solid ac !important }
        }
    }

    // Global -> Icons.
    span[class] {
        &[data-icon] {
            > svg > path {
                fill: fg;
                transition: 0.15s ease;
            }
            /// Animate-ish.
            &:hover > svg > path {
                opacity: 1;
                fill-opacity: 0.9 !important;
            }
        }
        /// Left -> Status icon.
        &[data-icon ^= 'status-v3'] path {
            &:first-child {
                fill: fg;
                fill-opacity: 0.55;
            }
        }
        &[data-icon = 'status-v3-unread'] path {
            &:last-child { fill: ac }
        }
        /// Search -> Back button.
        &[data-icon = 'back-blue'] path { fill: blue }
        /// Default user/group/broadcasts icons.
        &[data-icon ^= 'default-'] path {
            &:first-child { fill: bd }
            &:last-child { fill: cm }
        }
        /// Seen message.
        &[data-icon $= '-dblcheck-ack'] path { fill: blue }
        /// Report contact.
        &[data-icon = 'thumbs-down'] {
            path { fill: orange }
        }
        /// Delete chat/missed call.
        &[data-icon = 'delete-danger'],
        &[data-icon = 'miss'] {
            path { fill: red }
        }
    }

    // Global -> Context menu.
    div:not(#z) {
        &[style ^= 'transform-origin:'] {
            border: 1px solid bd;
            rad: r;
            c: 0 0 bg;
            box-shadow: bsh;
            li > div {
                c: cm;
                &:hover { c: fg 0 hl }
            }
            /// Chat -> Attach dropdown.
            &._1fRWV {
                top: -10px;
                padding: 10px;
                .Ijb1Q::after { box-shadow: 0 4px 8px sh }
            }
        }
    }

    // App -> Left.
    #side {
        > header {
            border-bottom: 1px solid bd;
            c: 0 0 t;
            /// Avatar background.
            [style *= 'height: 40px'] { c: 0 0 t }
        }
        /// Alerts.
        > header + span[class] {
            ._1puWZ, ._2xikZ, ._1sFYw, ._2t3oV {
                border-bottom: 1px solid bd;
                c: 0 0 hl;
            }
            /// Disconnected/connecting.
            ._1puWZ, ._2xikZ {
                * { c: yellow }
                [data-icon ^= 'chevron-'] path { fill: yellow }
                [data-icon ^= 'alert-'] path {
                    &[fill ^= '#FFF'] { fill: yellow }
                    &[fill ^= '#FFB'] { fill: hl }
                }
            }
            /// Enable notifications.
            ._1sFYw {
                * { c: blue }
                [data-icon ^= 'chevron-'] path { v: blue }
                [data-icon ^= 'alert-'] path[fill ^= '#FFF'] { fill: blue }
            }
            /// Phone battery low.
            ._2t3oV {
                * { c: red }
                [data-icon ^= 'chevron-'] path { v: red }
                [data-icon ^= 'alert-'] path[fill ^= '#FFF'] { fill: red }
            }
        }
        /// Search.
        ._2HS9r {
            border-bottom: 1px solid bd;
            c: 0 0 t;
            /// Active.
            > div {
                &._19OGD { c: 0 0 hl }
                &::after { content: none }
                > div { c: cm }
                > div + label {
                    c: 0 0 t;
                    input { c: fg 0 t }
                }
            }
        }
        /// Contacts.
        #pane-side {
            c: 0 0 t;
            /// Items.
            [style *= 'z-index'] > div > div[class] {
                c: 0 0 t;
                box-shadow: 0 1px bd;
                /// Active.
                &:hover, &._3mMX1 {
                    c: 0 0 hl;
                    box-shadow: inset 0 1px bd, 0 1px bd;
                }
                /// Remove borders.
                &::after, > div:last-child { border: none }
                /// Avatar background.
                [style *= 'height: 49px'] { c: 0 0 bd }
                /// Text.
                > div:last-child {
                    /// Title/timestamp.
                    > div:first-child {
                        > div:first-child { c: fg }
                        > div:last-child { c: cm }
                    }
                    /// Body.
                    > div:last-child { c: cm }
                }
                /// Unread indicators.
                .P6z4j { c: white 0 ac }
            }
        }
    }

    // App -> Left -> Profile/Settings.
    .app span > div[style *= 'height: 100%'] {
        > div[class], > span > div[class], > div > div[class] {
            c: 0 0 bg;
            > header {
                min-height: unset !important;
                // &, > div { height: unset }
                border-bottom: 1px solid bd;
                height: unset;
                c: 0 0 hl;
                /// NOTE: Reset text position.
                ._1pYs5 {
                    margin: 0;
                    padding-top: 4px;
                }
                .kyJvR {
                    height: 58px;
                    c: fg;
                }
            }
            /// Highlighted sections.
            ._2LSbZ {
                c: 0 0 t;
                box-shadow: none;
                ._3he1q { c: ac }
                ._3K9Sw { c: 0 bd }
                ._5UNoc ._3hnO5 { c: 0 ac }
            }
            /// Settings -> User info section.
            ._2UaNq {
                border-bottom: 1px solid bd;
                c: 0 0 t;
                &::after { content: none }
                [style *= 'height: 82px'] { c: 0 0 t }
                /// Nick/info.
                ._3H4MS { c: fg }
                .xD91K { c: cm }
            }
            /// Settings -> Options.
            ._26JG5 {
                border-bottom: 1px solid bd;
                c: 0 0 t;
                &:hover { c: 0 0 hl }
                &::before { content: none }
                > div:last-child { c: 0 t }
                ._6xQdq { c: fg }
            }
            ._1qWhd { c: cm }
        }
    }

    // Main -> Chat.
    #main {
        c: 0 0 bg;
        /// Chat doodle image.
        /// TODO: Implement an option to remove the image.
        [data-asset-chat-background] {
            filter: invert(1);
        }
        /// Chat header.
        > header {
            border-right: none;
            border-bottom: 1px solid bd;
            c: 0 bd bg;
            &::after { content: none }
            [style *= 'height: 40px'] { c: 0 0 t }
            [title] { c: fg }
        }
        /// Chat -> Loader.
        [title *= 'loading'] {
            c: 0 0 hl;
            box-shadow: inner, bsh;
            svg circle { stroke: green }
        }
        /// Chat -> System notes.
        .a7otO {
            opacity: 0.95;
            letter-spacing: 0;
            text-shadow: none;
            c: white 0 ac;
            box-shadow: inset 0 -3px sh;
        }
        /// Chat -> Jump to new messages.
        ._3KRbU {
            c: 0 0 hl;
            box-shadow: inner;
            // &:hover { c: 0 0 bd }
            .P6z4j { c: white 0 ac }
        }
        /// Messages area.
        .copyable-area > div[tabindex] {
            c: 0 bd;
            /// Chat -> Select messages.
            &._2AqZl {
                c: 0 0 hl;
                /// Selected messages.
                .qTFAl {
                    &:hover, &._3Z2tD {
                        opacity: 0.9 !important;
                        c: 0 0 bd;
                    }
                }
                /// Checkboxes.
                ._15wNI {
                    c: 0 ac ac;
                    div { c: 0 white }
                }
            }
            /// X unread messages.
            ._3Xx0y {
                c: fg bd hl;
                > span { c: 0 0 bd }
            }
        }
    }

    // Main -> Chat message bubbles.
    .message {
        left = bd;
        right = hl;
        &-in, &-out {
            /// Tails.
            &.tail > .tail-container {
                width: unset;
                height: unset;
                border: 6px solid t;
                background: none !important;
            }
            /// Feat -> Message tails.
            if ( msg_tails != 1 ) {
                rad: 7.5px !important;
                &.tail > .tail-container { display: none }
            }
            /// Date.
            [data-pre-plain-text] + div * { c: cm }
            /// Stickers.
            &.a81-s {
                /// Header.
                ._3Mf7Z { c: 0 0 bg }
                /// Date.
                ._3qAvH {
                    c: cm 0 hl;
                    // box-shadow: inner !important;
                    div { color: inherit }
                }
                /// Fix bubble radius.
                if ( msg_tails != 1 ) {
                    ._2Hp95._1X6iJ ._3Mf7Z { rad: 7.5px }
                }
            }
        }
        /// Left.
        &-in {
            &:not(.a81-s) {
                c: fg 0 left;
                box-shadow: 0 1px sh !important;
            }
            &.tail > .tail-container {
                rad: 4px 0 0 0;
                border-top-color: left;
                border-right-color: left;
            }
        }
        /// Right.
        &-out {
            &:not(.a81-s) {
                c: fg 0 right;
                box-shadow: 0 1px sh !important;
            }
            &.tail > .tail-container {
                rad: 0 4px 0 0;
                border-top-color: right;
                border-left-color: right;
            }
        }
    }

    // Main -> Chat input.
    #main > footer {
        c: 0 0 t;
        /// Active emojis.
        .-XQxp._1oNFt path {
            fill-opacity: 1;
            fill: ac;
        }
        /// Emoji picker.
        ._2mlOb {
            c: 0 bd hl;
            box-shadow: inset 0 1px bd;
            &::before { content: none }
        }
        /// Input area.
        > div:first-child {
            border-top: 1px solid bd;
            c: 0 bd bg;
            div[style] + div[tabindex] {
                rad: r;
                c: 0 bd hl;
                [style *= 'visibility'] {
                    // padding-top: 2px;
                    c: cm;
                    /// Hide input placeholder.
                    ../ .focused > div[style] { c: t }
                }
            }
        }
        /// Emoji/gif/sticker menu.
        ._30sf0 {
            c: 0 bd;
            /// Header.
            ._2avTY {
                c: 0 0 hl;
                box-shadow: inset 0 1px bd, inset 0 -1px bd;
                div[style *= 'background'] { c: 0 0 ac }
                > :not(._2wn58) { c: cm }
                ._2wn58 { c: fg }
                /// Stickers -> Active nav.
                .Orl3a { c: 0 0 ac }
            }
            /// Body.
            .QChXd, ._20KNO, .RxbUw {
                c: 0 0 bg;
                /// Search.
                [data-tab] {
                    c: 0 bd bg;
                    label {
                        c: fg bd hl;
                        box-shadow: inner;
                        input { c: fg }
                    }
                }
                /// Gif -> Preloader.
                ._2x9yi { c: 0 0 hl }
                /// Stickers -> Retry button.
                [data-id = 'retry'] { c: ac }
            }
        }
        /// Chat -> Select messages.
        + span:not([class]) > div {
            border-left: 1px solid bd;
            border-top: 1px solid bd;
            c: 0 0 bg;
        }
    }
}
