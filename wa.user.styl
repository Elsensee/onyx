/* ==UserStyle==
@name         Dark-WhatsApp
@description  Dark and light, very customizable theme for WhatsApp.
@namespace    github.com/vednoc/onyx
@homepageURL  https://github.com/vednoc/onyx
@supportURL   https://github.com/vednoc/onyx/issues
@version      1.9.9
@author       vednoc <vednoc@pm.me> (https://gitlab.com/vednoc)
@license      MIT
@preprocessor stylus

@var checkbox theme      'Old/new[custom] colors' 0
@var text     ui_font    'Custom UI font        ' ''font_name''
@var text     radius     'Custom rounded corners' 4px
@var checkbox msg_tails  'Enable message tails  ' 1
@var checkbox fullscreen 'Enable fullscreen mode' 0

@var range    emoji_o    'Emoji: Default opacity' [0.8, 0.0, 1, 0.01]
@var range    emoji_r    'Emoji: Clip size      ' [49, 48, 70, 1, '%']

@var select   app_image  'Custom app background ' {
    'Custom  *': 'custom  ',
    'Default  ': 'default ',
    'None     ': 'none    ',
}
@var text     image_url  'Custom background link' url('https://images.unsplash.com/photo-1434569117012-ce134ee1a088?fit=crop&w=1280&h=720&q=80')
@var range    bg_opacity 'App: Image opacity    ' [0.5, 0.0, 1, 0.01]
@var range    bg_blur    'App: Image blur size  ' [8, 0, 50, 1, 'px']
@var range    bg_invert  'App: Image inversion  ' [0, 0.0, 1, 0.1]

@var checkbox chat_b_img 'Chat: Blur img/videos ' 0

@var checkbox chat_bg    'Chat: Show bg image   ' 1
@var text     chat_image 'Chat: Custom image URL' url('/img/bg-chat-tile_8a055527b27b887521a9f084497d8879.png')
@var range    chat_bg_o  'Chat: Bg image opacity' [0.1, 0.0, 1, 0.01]
@var range    chat_bg_i  'Chat: Bg image invert ' [0.6, 0.0, 1, 0.1]

@var checkbox chat_left  'Chat: Align left msg  ' 0
@var checkbox chat_right 'Chat: Align right msg ' 0

@var color dark    'Color: Primary bg   ' #292929
@var color darken  'Color: Highlight bg ' #333333
@var color darker  'Color: Secondary bg ' #424242
@var color light   'Color: Primary fg   ' #e6e6e6
@var color lighter 'Color: Secondary fg ' #bababa
@var color accent  'Color: Accent       ' #7289da
@var color yellow  'Color: Yellow       ' #f0c674
@var color orange  'Color: Orange       ' #d98245
@var color red     'Color: Red          ' #a54242
@var color magenta 'Color: Magenta      ' #b294bb
@var color violet  'Color: Violet       ' #85678f
@var color blue    'Color: Blue         ' #54738c
@var color cyan    'Color: Cyan         ' #5e8d87
@var color green   'Color: Green        ' #7b823a
@var color white   'Color: White        ' #ffffff
@var color shadow  'Color: Shadow       ' #00000010
==/UserStyle== */

@-moz-document domain('web.whatsapp.com') {

    :root {
        if ( theme == 1 ) {
            --dark      : dark;
            --darken    : darken;
            --darker    : darker;
            --light     : light;
            --lighter   : lighter;
            --accent    : accent;
            --shadow    : shadow;
        } else {
            --dark      : #272c35;
            --darken    : #222730;
            --darker    : #1f232a;
            --light     : #e9e9e9;
            --lighter   : #c1c1c1;
            --accent    : accent;
            --shadow    : shadow;
        }
        --yellow    : yellow;
        --orange    : orange;
        --red       : red;
        --magenta   : magenta;
        --violet    : violet;
        --blue      : blue;
        --cyan      : cyan;
        --green     : green;
        --white     : white;
        --radius    : radius;
        --t         : transparent;
        --bshadow   : 0 2px 4px var(--shadow);

        --emoji-o   : emoji_o;
        --emoji-r   : emoji_r;

        --bg-image  : image_url;
        --bg-opacity: bg_opacity;
        --bg-blur   : bg_blur;
        --bg-invert : bg_invert;

        --chat-image: chat_image;
        --chat-bg-o : chat_bg_o;
        --chat-bg-i : chat_bg_i;

        --ui-font   : ui_font, 'Segoe UI', 'Helvetica Neue', Helvetica,
            'Lucida Grande', Arial, Ubuntu, Cantarell, 'Fira Sans', sans-serif;

        --version   : 'Dark-WhatsApp [Alpha] v1.9.9';
        --message   : 'WIP v2. ';
        --changes   : 'See the PR at: https://github.com/vednoc/onyx/pull/38';
    }

    // * Use stylus-lang variables with CSS variables.
    bg      = var(--dark);
    hl      = var(--darken);
    bd      = var(--darker);
    fg      = var(--light);
    cm      = var(--lighter);
    ac      = var(--accent);
    sh      = var(--shadow);
    bsh     = var(--bshadow);
    yellow  = var(--yellow);
    orange  = var(--orange);
    red     = var(--red);
    magenta = var(--magenta);
    violet  = var(--violet);
    blue    = var(--blue);
    cyan    = var(--cyan);
    green   = var(--green);
    white   = var(--white);
    t       = var(--t);
    r       = var(--radius);
    outer   = 0 0 0 1px bd;
    inner   = inset outer;

    // Color mixin.
    // All colors: `c: fg bd bg;`
    // Only border-color: `c: 0 bd;`
    c(x, y = 0, z = 0, xi = 1, yi = 1, zi = 1) {
        i = !important;
        if x is a 'call' or x is a 'rgba' {            color: xi is 0? x : x i }
        if y is a 'call' or y is a 'rgba' {     border-color: yi is 0? y : y i }
        if z is a 'call' or z is a 'rgba' { background-color: zi is 0? z : z i }
    }
    // SVG mixin.
    v(x, y = 0, xi = 1, yi = 1) {
        i = !important;
        if x is a 'call' or x is a 'rgba' {   fill: xi is 0? x : x i }
        if y is a 'call' or y is a 'rgba' { stroke: yi is 0? y : y i }
    }
    // Rounded corners.
    rad() { border-radius: arguments }
    // Shorter important.
    i = !important;

    body {
        c: fg 0 bg;
        background-image: none;
        scrollbar-color: ac #5552;

        /// Text.
        ::placeholder { c: cm }
        a { color: ac }
        strong { c: fg }

        /// Browser-specific resets.
        ::-moz-range {
            &-progress { c: 0 0 blue }
            &-thumb { c: 0 0 ac }
            &-track { c: 0 0 bg }
            /// Progress completed.
            ../ ._1N8Pv { c: 0 0 ac }
        }

        /// Feat -> Custom font.
        &, button, input { font-family: var(--ui-font) }

        /// App -> Landing page.
        .landing {
            &-wrapper::before { c: 0 0 hl }
            &-header {
                position: relative;
                &::after {
                    right: 0;
                    position: absolute;
                    content: var(--version);
                }
                path[fill ^= '#FFF'] { fill: ac }
                path[fill ^= '#00E'] { fill: bd }
                div { c: fg }
            }
            &-window:not(#z) {
                rad: r;
                c: 0 0 bg;
                box-shadow: inner, bsh;
            }
            &-main {
                a[href] { c: ac }
                ._2yUXW { c: cm }
                .landing-title { c: fg }
                rect[fill ^= '#f2f'], rect[fill ^= '#F2F'] { fill: bd }
                path[fill ^= '#818'] { fill: ac }
                /// QR code.
                div[data-ref] {
                    rad: 0;
                    filter: contrast(150%);
                    outline: 4px solid white;
                    box-shadow: 0 0 0 4px white;
                    [role='button'] { c: white 0 ac }
                }
                /// Video showcase.
                + ._310T_ {
                    c: 0 0 t;
                    img { opacity: 0.3 }
                }
            }
        }

        /// App -> Startup.
        #initial_startup, #startup {
            c: 0 0 bg;
            progress { c: ac 0 bd }
            ::-moz-progress-bar { c: 0 0 ac }
            circle { stroke: fg }
        }

        // App -> Tooltips.
        ._3pkG4 {
            c: fg 0 hl;
            box-shadow: inner, bsh;
            button { c: ac }
        }

        /// App -> Intro.
        .iFKgT {
            c: 0 bd bg;
            &::after { c: 0 ac }
            [style] {
                h1 { c: fg }
                div { c: cm }
            }
            /// Reset default image.
            [data-asset-intro-image] {
                rad: 50%;
                max-width: 200px;
                max-height: 200px;
                filter: opacity(0.75);
                transition: opacity 0.6s ease;
            }
            /// Userstyle info.
            h1 + div[class] {
                font-size: 0;
                &::before {
                    display: block;
                    font-size: 16px;
                    margin-bottom: -16px;
                    content: var(--message) var(--changes);
                }
                &::after {
                    display: block;
                    font-size: 16px;
                    margin-top: 10px;
                    padding-top: 10px;
                    content: var(--version);
                    border-top: 1px solid bd;
                }
            }
        }

        /// Global -> Typing alert.
        span[title *= 'typing']:not(#z) { c: ac }

        /// Global -> Checkboxes.
        ._1Zo-R { c: 0 bd hl }
        ._15wNI { c: 0 ac ac }

        /// Global -> Active buttons.
        ._3j8Pd { &.GPmgF, &.GPmgf { c: 0 0 hl }}

        /// Contacts -> Loader.
        svg[width = '18'][height = '18'] circle { stroke: green }

        /// Panes -> Change avatars.
        ._1JS2G { c: fg 0 #66666666 }
    }

    #app > div {
        &::after {
            if ( app_image == custom ) {
                s = calc(-1 * var(--bg-blur));
                b = blur(var(--bg-blur));
                o = opacity(var(--bg-opacity));
                i = invert(var(--bg-invert));
                top: s; right: s; bottom: s; left: s;
                height: unset; width: unset;
                filter: b o i;
                background-image: var(--bg-image);
                c: 0 0 hl;
            } else if ( app_image == default ) {
                c: 0 0 hl;
            } else {
                display: none;
            }
            /// Remove image in fullscreen mode.
            if ( fullscreen == 1 ) { content: none }
        }

        .app {
            c: 0 0 bg;
            background-image: none;
            @media (min-width: 1441px) {
                border: 1px solid bd;
                rad: r;
                box-shadow: bsh;
                /// Feat -> Fullscreen mode.
                if ( fullscreen == 1 ) {
                    rad: 0;
                    top: unset;
                    width: 100%;
                    height: 100%;
                }
            }
        }
    }

    /// Global -> Emojis.
    .emojik {
        clip-path: circle(var(--emoji-r));
        &:focus, &.selected { box-shadow: 0 0 0 2px ac !important }
        &:not(:hover):not(:focus):not(.selected) {
            filter: opacity(var(--emoji-o));
        }
        /// Making sure active emoji is different from the rest.
        if ( emoji_o >= 0.7 ) {
            &:hover, &:focus, &.selected {
                filter: opacity(calc(var(--emoji-o) - 0.3));
            }
        }
    }

    /// Global -> Emoji picker popout.
    ._342qq {
        rad: r !important;
        box-shadow: bsh;
        /// Header.
        ._2avTY {
            c: 0 0 hl;
            box-shadow: inset 0 -1px bd;
            [style] { c: 0 0 ac }
        }
        /// Content.
        .QChXd {
            c: 0 0 bg;
            [data-tab] {
                c: 0 0 bg;
                /// Input.
                label {
                    c: fg 0 hl;
                    box-shadow: inner;
                }
            }
            /// Sections.
            ._2lKjK { c: cm }
        }
        + [data-animate-dropdown-nib] {
            c: 0 0 bd;
            box-shadow: none;
        }
    }

    /// Global -> Modals.
    .overlay {
        c: 0 0 t;
        /// Backdrop.
        &::before {
            content: '';
            z-index: -1;
            opacity: 0.96;
            position: absolute;
            top: 0; right: 0; bottom: 0; left: 0;
            c: 0 0 bg;
        }
        /// Header.
        > .cGLoy {
            c: 0 0 bg;
            box-shadow: 0 1px bd;
            div { c: 0 0 t }
            .xD91K { c: cm }
            ._3H4MS { c: fg }
        }
        /// Previous/next buttons.
        ._3yth3:not(#z) {
            c: 0 0 bg;
            box-shadow: inner, bsh;
            &:hover { c: 0 0 hl }
        }
        /// Text.
        .X5OiD { c: 0 0 bd }
        .JmH7x { c: cm }
        ._2yVvV { c: fg }
        /// Buttons.
        [role = 'button'] {
            &._23_1v {
                c: cm;
                &:hover {
                    c: fg 0 hl;
                    box-shadow: none;
                }
            }
            /// Primary.
            &._3PQ7V {
                c: white 0 ac;
                box-shadow: bsh;
                transition: 0.15s ease;
                &:hover { opacity: 0.8 }
            }
        }
        /// Popup message.
        [data-animate-modal-popup]:not(#z) {
            border: 1px solid bd;
            rad: r;
            c: 0 0 bg;
            box-shadow: 0 4px 8px 2px sh;
            ._13HPh { c: fg }
            /// Forward message to...
            ._1KDYa {
                c: 0 0 t;
                header { c: fg 0 hl }
                /// TODO: See if search/contacts can be re-used.
                .r7sRK { c: ac 0 t }
                ._2UaNq { c: fg 0 t }
                /// Footer.
                > span > div[style] {
                    c: fg 0 hl;
                    [role = 'button'] {
                        c: 0 0 ac;
                        box-shadow: bsh;
                    }
                }
            }
            /// Failed to connect.
            span[role = 'button'] { c: ac }
            hr {
                c: 0 bd;
                + div { c: fg }
            }
        }
    }

    // * Global -> Status.
    [data-animate-status-v3-modal-background='true'] {
        c: 0 0 t;
        /// Backdrop.
        &::before {
            content: '';
            z-index: -1;
            opacity: 0.91;
            position: absolute;
            top: 0; right: 0; bottom: 0; left: 0;
            c: 0 0 bg;
        }
        /// Content.
        > div {
            c: 0 0 bg;
            @media (min-width: 1441px) {
                rad: r;
                border: 1px solid bd;
            }
            /// Contacts.
            > div[class]:nth-child(1) {
                c: 0 0 hl;
                box-shadow: 1px 0 bd;
                @media (min-width: 1441px) { rad: r 0 0 r }
                /// Text.
                .OEFaY { c: cm }
                ._26-u- { c: fg }
            }
            > div[class]:nth-child(2) {
                .ojaNO { c: cm }
                /// Reset the circle icon.
                svg[width][height] path { v: t fg }
            }
            /// Feat -> Fullscreen mode.
            if ( fullscreen == 1 ) {
                rad: 0;
                top: unset;
                width: 100%;
                height: 100%;
            }
        }
    }

    // Global -> Media selection.
    ._2AP3i {
        c: 0 bd bg;
        /// Item reset.
        ._1LdNS {
            &.cJP5q {
                border: none !important;
                transform: scale(1) !important;
                outline: 4px solid ac;
            }
            &:hover:not(.cJP5q):not(#spec) { outline: 4px solid ac !important }
        }
    }

    // Global -> Icons.
    span[class] {
        &[data-icon] {
            > svg > path {
                fill: fg;
                transition: 0.15s ease;
            }
            /// Animate-ish.
            &:hover > svg > path {
                opacity: 1;
                fill-opacity: 0.9 !important;
            }
        }
        /// Left -> Status icon.
        &[data-icon ^= 'status-v3'] path {
            &:first-child {
                v: fg;
                fill-opacity: 0.55;
            }
        }
        &[data-icon = 'status-v3-unread'] path {
            &:last-child { v: ac }
        }
        /// Search -> Back button.
        &[data-icon = 'back-blue'] path { v: blue }
        /// Default user/group/broadcasts icons.
        &[data-icon ^= 'default-'] path {
            &:first-child { fill: bd }
            &:last-child { fill: cm }
        }
        /// Business accounts.
        &[data-icon ^= 'business-'] path { fill: cm }
        /// Audio files.
        &[data-icon = 'audio-file'] path {
            &:first-child { fill: orange }
            &:last-child { fill: hl }
        }
        &[data-icon ^= 'ptt-'] path {
            &:first-child { fill: bd }
            &:last-child { fill: ac }
        }
        /// Message status.
        &[data-icon *= '-dblcheck'] path { v: cm }
        &[data-icon *= '-dblcheck-ack'] path { v: blue }
        /// Report contact.
        &[data-icon = 'thumbs-down'] {
            path { v: orange }
        }
        /// Delete chat/missed call.
        &[data-icon = 'delete-danger'],
        &[data-icon = 'miss'] {
            path { v: red }
        }
        /// Icons in 'select messages' mode.
        &[data-icon = 'delete'] path { v: red }
        &[data-icon = 'forward'] path { v: green }
        &[data-icon = 'star-btn'] path { v: yellow }
    }

    // Global -> Context menu.
    div:not(#z) {
        &[style ^= 'transform-origin:'] {
            border: 1px solid bd;
            rad: r;
            c: 0 0 bg;
            box-shadow: bsh;
            li > div {
                c: cm;
                &:hover { c: fg 0 hl }
            }
            /// Chat -> Attach dropdown.
            &._1fRWV {
                top: -10px;
                padding: 10px;
                .Ijb1Q::after { box-shadow: 0 4px 8px sh }
            }
        }
    }

    // App -> Left.
    #side {
        > header {
            border-bottom: 1px solid bd;
            c: 0 0 t;
            /// Avatar background.
            [style *= 'height: 40px'] { c: 0 0 t }
        }
        /// Alerts.
        > header + span[class] {
            ._1puWZ, ._2xikZ, ._1sFYw, ._2t3oV {
                border-bottom: 1px solid bd;
                c: 0 0 hl;
            }
            /// Disconnected/connecting.
            ._1puWZ, ._2xikZ {
                * { c: yellow }
                [data-icon ^= 'chevron-'] path { fill: yellow }
                [data-icon ^= 'alert-'] path {
                    &[fill ^= '#FFF'] { fill: yellow }
                    &[fill ^= '#FFB'] { fill: hl }
                }
            }
            /// Enable notifications.
            ._1sFYw {
                * { c: blue }
                [data-icon ^= 'chevron-'] path { v: blue }
                [data-icon ^= 'alert-'] path[fill ^= '#FFF'] { fill: blue }
            }
            /// Phone battery low.
            ._2t3oV {
                * { c: red }
                [data-icon ^= 'chevron-'] path { v: red }
                [data-icon ^= 'alert-'] path[fill ^= '#FFF'] { fill: red }
            }
        }
        /// Search.
        /div[class *= 'ZP8RM'] {
            border-bottom: 1px solid bd;
            c: 0 0 bg;
            &._19OGD { c: 0 0 hl }
            &::after { content: none }
            > div { c: cm }
            > div + label {
                c: 0 0 t;
                input { c: fg 0 t }
            }
        }
        /// Contacts.
        #pane-side {
            c: 0 0 t;
            /// Items.
            [style *= 'z-index'] > div > div[class] {
                c: 0 0 t;
                box-shadow: 0 1px bd;
                .matched-text { c: ac }
                /// Active states.
                &:hover, &._3mMX1 {
                    c: 0 0 hl;
                    box-shadow: inset 0 1px bd, 0 1px bd;
                }
                /// Remove borders.
                &::after, > div:last-child { border: none }
                /// Avatar background.
                [style *= 'height: 49px'] { c: 0 0 bd }
                /// Text.
                > div:last-child {
                    /// Title/timestamp.
                    > div:first-child {
                        > div:first-child { c: fg }
                        > div:last-child { c: cm }
                    }
                    /// Body.
                    > div:last-child { c: cm }
                }
                /// Unread indicators.
                .P6z4j { c: white 0 ac }
            }
        }
        /// Search contacts/messages.
        .r7sRK {
            c: ac 0 t;
            box-shadow: 0 1px bd;
        }
    }

    // App -> Left -> Profile/Settings.
    .app span > div[style *= 'height: 100%'] {
        > div[class], > span > div[class], > div > div[class] {
            c: 0 0 bg;
            > header {
                min-height: unset !important;
                // &, > div { height: unset }
                border-bottom: 1px solid bd;
                height: unset;
                c: 0 0 hl;
                /// NOTE: Reset text position.
                ._1pYs5 {
                    margin: 0;
                    padding-top: 4px;
                }
                .kyJvR {
                    height: 58px;
                    c: fg;
                }
            }
            /// Highlighted sections.
            ._2LSbZ {
                c: 0 0 t;
                box-shadow: none;
                ._3he1q { c: ac }
                ._3K9Sw { c: 0 bd }
                ._5UNoc ._3hnO5 { c: 0 ac }
            }
            /// Settings -> User info section.
            ._2UaNq {
                border-bottom: 1px solid bd;
                c: 0 0 t;
                &::after { content: none }
                [style *= 'height: 82px'] { c: 0 0 t }
                /// Nick/info.
                ._3H4MS { c: fg }
                .xD91K { c: cm }
            }
            /// Settings -> Options.
            ._26JG5 {
                border-bottom: 1px solid bd;
                c: 0 0 t;
                &:hover { c: 0 0 hl }
                &::before { content: none }
                > div:last-child { c: 0 t }
                ._6xQdq { c: fg }
            }
            ._1qWhd { c: cm }
            /// New group.
            ._1w-mX {
                c: 0 0 t;
                input { c: fg }
                ._39cGk { c: 0 bd }
                /// Resets for contacts.
                + ._1c8mz {
                    c: 0 0 t;
                    .r7sRK { c: ac 0 hl }
                    ._8-yzK { c: 0 0 t }
                    ._2DxRd, ._2WP9Q { c: 0 t }
                    [style *= 'height: 49px'] { c: 0 0 bd }
                }
            }
            /// New chat.
            ._1c8mz {
                /// New chat.
                ._11p3Q, ._8-yzK { c: 0 0 t }
                .r7sRK { c: ac 0 t }
                /// Remove borders.
                ._2DxRd, ._2WP9Q { border: none }
            }
            /// Starred/Archived.
            ._1WMT2 {
                &::before {
                    margin-top: -1px;
                    left: 0;
                    c: 0 0 bd;
                }
                &::after { content: none }
                &._1lakC, &._2nA3s { c: 0 0 hl }
                ._2V2qB, .jLybP::before { c: cm }
            }
        }
    }

    // App -> Right.
    ._1C9rS .copyable-area {
        border-left: 1px solid bd;
        /// Avatar.
        [style *= 'height: 200px'] { c: 0 0 bd }
        ._1drsQ { c: fg }
        ._2IwIk { c: cm }
        /// Buttons.
        ._3_-Si {
            padding: 0 15px;
            > div { c: 0 bd }
            span { c: fg }
        }
        /// Reset padding.
        ._1ur1f { padding: 28px 15px 19px }
        ._2ZVEo { padding: 14px 15px 10px }
        ._2k1Z5 { padding: 14px 15px 4px }
        ._3EN0l { padding: 14px 15px }
        ._2nQ7u, ._1goQ0 { padding: 0 }
        ._2LSbZ._2j5ir { margin-bottom: unset }
        ._1tyVr {
            padding: 0 15px;
            width: auto;
        }
        /// Message info -> Image.
        ._2rGVQ {
            border-bottom: 1px solid bd;
            c: 0 0 t;
        }
        /// Message info -> Read by.
        ._2AJf5 {
            c: 0 0 t;
            span { c: ac }
         }
        /// Read/Delivered section.
        ._2WP9Q { border: none }
        /// Search -> Items.
        [style] > div > ._2UaNq:hover {
            c: 0 0 hl;
            box-shadow: inset 0 1px bd;
        }
        /// Search -> Msg content/date.
        span[title] > span[dir] { c: fg }
        ._0LqQ { c: cm }
        /// Media/Links/Docs.
        [data-active-tab] {
            border-bottom: 1px solid bd;
            c: 0 0 t;
            button {
                c: cm;
                &:hover { c: 0 0 hl }
                &._3caqI { c: fg }
            }
            /// Selected.
            &::before {
                margin-bottom: -1px;
                height: 1px;
                c: 0 0 ac;
            }
        }
    }

    // Main -> Chat.
    #main {
        c: 0 0 bg;
        /// Chat doodle image.
        /[data-asset-chat-background] {
            opacity: 1;
            filter: invert(var(--chat-bg-i)) opacity(var(--chat-bg-o));
            background: var(--chat-image);
            /// Feat -> Show chat image.
            if ( chat_bg != 1 ) { display: none }
        }
        /// Chat header.
        > header {
            border-right: none;
            border-bottom: 1px solid bd;
            c: 0 bd bg;
            &::after { content: none }
            [style *= 'height: 40px'] { c: 0 0 t }
            [title] { c: fg }
            /// Muted color for group members.
            > div:nth-child(2) > div:nth-child(2) span[title] { c: cm }
        }
        /// Chat -> Loader.
        [title *= 'load']:not(a) {
            c: 0 0 hl;
            box-shadow: inner, bsh;
            svg circle { stroke: green }
        }
        /// Chat -> System notes.
        .a7otO {
            opacity: 0.95;
            letter-spacing: 0;
            text-shadow: none;
            c: white 0 blue;
            box-shadow: inset 0 -3px sh;
            &.S-bQb { c: 0 0 orange }
            &:not(.tail) { c: 0 0 green }
        }
        /// Chat -> Jump to new messages.
        ._3KRbU {
            c: 0 0 hl;
            box-shadow: inner;
            // &:hover { c: 0 0 bd }
            .P6z4j { c: white 0 ac }
        }
        /// Messages area.
        .copyable-area > div[tabindex] {
            c: 0 bd;
            /// Chat -> Select messages.
            &._2AqZl {
                c: 0 0 hl;
                /// Selected messages.
                .qTFAl {
                    &:hover, &._3Z2tD {
                        opacity: 0.5 !important;
                        c: 0 0 bd;
                    }
                }
                /// Checkboxes.
                ._15wNI {
                    c: 0 ac ac;
                    div { c: 0 white }
                }
            }
            /// X unread messages.
            ._3Xx0y {
                c: fg bd hl;
                > span { c: 0 0 bd }
            }
            /// Attached files.
            a[title] {
                > ._1mrMQ { c: fg 0 sh }
                + div { &, > span::before { c: cm }}
            }
            /// Rich embeds.
            ._1SsXF {
                c: 0 0 sh;
                div > div:nth-child(1) span { c: fg }
                div > div:nth-child(2) span { c: cm }
                div > div:nth-child(3) span { c: fg }
            }
        }
        /// Feat -> Blur img/videos.
        if ( chat_b_img == 1 ) {
            [style *= 'height'] {
                > img, > div[style], video {
                    transition: 500ms ease;
                    transition-delay: 0ms;
                    filter: blur(16px) grayscale(100%);
                    &:hover {
                        transition-delay: 500ms;
                        filter: none i;
                    }
                }
                /// HACK: Reset blur for videos.
                &[style *= 'width'] > div:first-child:hover ~ div {
                    > video {
                        transition-delay: 500ms;
                        filter: none i;
                    }
                }
                /// HACK: Reset img timestamp wrapper.
                img[src] + div { pointer-events: none }
            }
        }
    }

    // Main -> Chat message bubbles.
    .message {
        left = bd;
        right = hl;
        &-in, &-out {
            /// Fix shadows.
            > div:not(.a81-s) {
                box-shadow: 0 1px sh i;
                > div { box-shadow: none i }
            }
            /// Tails.
            .tail > .tail-container {
                width: unset;
                height: unset;
                border: 6px solid t;
                background: none !important;
            }
            /// Feat -> Message tails.
            if ( msg_tails != 1 ) {
                rad: 7.5px !important;
                &.tail > .tail-container { display: none }
            }
            /// Date.
            [data-pre-plain-text] + div * { c: cm }
            /// Reset image context menu.
            &._26GKj ._2Nkc4:not(#z) { background: none i  }
            /// Stickers.
            .a81-s {
                /// Header.
                ._3Mf7Z {
                    c: 0 0 left;
                    box-shadow: 0 1px sh i;
                }
                /// Date.
                ._3qAvH {
                    c: cm 0 hl;
                    // box-shadow: inner !important;
                    div { color: inherit }
                }
                /// Fix bubble radius.
                if ( msg_tails != 1 ) {
                    ._2Hp95._1X6iJ ._3Mf7Z { rad: 7.5px }
                }
            }
            /// Context menu -> Images and forwarded messages.
            > div > span:nth-last-child(2) > div[style] {
                background: linear-gradient(30deg, t 65%, bg 120%) i;
            }
            /// Audio messages.
            ._1lxsr, ._3MYI2 { c: cm }
            /// Avatars.
            [style *= 'height: 55px'] {
                c: 0 0 bg;
                box-shadow: bsh;
                svg path[fill = '#DFE5E7'] { v: t }
            }
            /// Search -> Selected message.
            > .velocity-animating * { c: ac }
            /// Images.
            div[style *= 'width'][style *= 'height'] + div[class] {
                padding: 3px 7px;
                rad: 7.5px;
                c: 0 0 hl;
            }
        }
        /// Left.
        &-in {
            /// Not stickers.
            > div:not(.a81-s) > div { c: fg 0 left }
            /// Reset tails.
            .tail {
                border-top-left-radius: 0 i;
                > .tail-container {
                    rad: 4px 0 0 0;
                    border-top-color: left;
                    border-right-color: left;
                }
            }
            /// Groups -> Nickname.
            [role] > span[role = 'button'] + span { c: fg }
            /// Context menu.
            > div > span:last-child > div[style] {
                /// Non-stickers.
                &:not(._2PpWQ) {
                    background: linear-gradient(90deg, t, left) i;
                }
                /// Stickers.
                &._2PpWQ > div[style *= 'opacity'] { c: 0 0 left }
            }
            /// Replies.
            ._2HTIU { c: 0 0 right }
            /// Feat -> Align left bubble.
            if ( chat_left == 1 ) { justify-content: flex-end }
        }
        /// Right.
        &-out {
            /// Not stickers.
            > div:not(.a81-s) > div { c: fg 0 right }
            /// Reset tails.
            .tail {
                border-top-right-radius: 0 i;
                > .tail-container {
                    rad: 0 4px 0 0;
                    border-top-color: right;
                    border-left-color: right;
                }
            }
            /// Context menu.
            > div > span:last-child > div[style] {
                /// Non-stickers.
                &:not(._2PpWQ) {
                    background: linear-gradient(90deg, t, right) i;
                }
                /// Stickers.
                &._2PpWQ div[style *= 'opacity'] { c: 0 0 right }
            }
            /// Replies.
            ._2HTIU { c: 0 0 left }
            /// Feat -> Align right bubble.
            if ( chat_right == 1 ) { justify-content: flex-start }
        }
    }

    // Main -> Chat input.
    #main > footer {
        c: 0 0 t;
        /// Active emojis.
        .-XQxp._1oNFt path {
            fill-opacity: 1;
            fill: ac;
        }
        /// Emoji picker.
        ._2mlOb {
            c: 0 bd hl;
            box-shadow: inset 0 1px bd;
            &::before { content: none }
        }
        /// Input area.
        > div:first-child {
            border-top: 1px solid bd;
            c: 0 bd bg;
            div[style] + div[tabindex] {
                rad: r;
                c: 0 bd hl;
                [style *= 'visibility'] {
                    // padding-top: 2px;
                    c: cm;
                    /// Hide input placeholder.
                    ../ .focused > div[style] { c: t }
                }
            }
        }
        /// Emoji/gif/sticker menu.
        ._30sf0 {
            c: 0 bd;
            /// Header.
            ._2avTY {
                c: 0 0 hl;
                box-shadow: inset 0 1px bd, inset 0 -1px bd;
                div[style *= 'background'] { c: 0 0 ac }
                > :not(._2wn58) { c: cm }
                ._2wn58 { c: fg }
                /// Stickers -> Active nav.
                .Orl3a { c: 0 0 ac }
            }
            /// Body.
            .QChXd, ._20KNO, .RxbUw {
                c: 0 0 bg;
                /// Search.
                [data-tab] {
                    c: 0 bd bg;
                    label {
                        c: fg bd hl;
                        box-shadow: inner;
                        input { c: fg }
                    }
                }
                /// Gif -> Preloader.
                ._2x9yi { c: 0 0 hl }
                /// Stickers -> Retry button.
                [data-id = 'retry'] { c: ac }
            }
        }
        /// Chat -> Select messages.
        + span:not([class]) > div {
            border-left: 1px solid bd;
            border-top: 1px solid bd;
            c: 0 0 bg;
        }
        /// Alerts -> Not in your contacts.
        ._2Pown {
            c: fg bd hl;
            [role = 'button'] {
                c: cm 0 bd;
                &:hover {
                    c: fg;
                    box-shadow: 0 4px 8px sh;
                }
            }
        }
    }
}
